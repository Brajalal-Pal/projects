@model IEnumerable<BusinessLayerProject.User>

@{
    ViewBag.Title = "Index";
    int i = 0;
}

<h3 style="font-family: verdana;">Registered Users</h3>
<table class="table2" style="width: 100%">
    <tr>
        <th>
            &nbsp;
        </th>
        <th>
            Name
        </th>        
        <th>
            @Html.DisplayNameFor(model => model.EmailId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th> 
        <th>
            Phone
        </th>             
        <th>
            @Html.DisplayNameFor(model => model.UserTypeDesc)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Active)
        </th>
        <th>&nbsp;</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td style="text-align: center">
                @{
                    i = i + 1;
                }

                @i
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName), @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmailId)
            </td>
            <td>
                
                @{
                    var str = item.Address.Trim();
                    var newStr = str.Substring(0, str.Length < 27 ? str.Length : 27);
                }

                @newStr
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
                    
            <td>
                @Html.DisplayFor(modelItem => item.UserTypeDesc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Active)
            </td>
            <td>
                @Html.ActionLink("View Profile", "UserProfile", "User", new { userId = item.UserId }, new { @class = "btn btn-primary" })
            </td>
        </tr>
    }

</table>

<br/>
<a href="javascript:history.back()" class="btn btn-info"> &raquo; Go Back</a>
<input type="button" id="create_pdf" value="Create PDF" class="btn btn-primary" />

<script>  
    (function () {  
        var  
            form = $('.table2'),  
            cache_width = form.width(),  
            a4 = [595.28, 841.89]; // for a4 size paper width and height  
  
        $('#create_pdf').on('click', function () {  
            $('body').scrollTop(0);  
            createPDF();  
        });  
        //create pdf  
        function createPDF() {  
            getCanvas().then(function (canvas) {  
                var  
                    img = canvas.toDataURL("image/png"),  
                    doc = new jsPDF({  
                        unit: 'px',  
                        format: 'a4'  
                    });  
                doc.addImage(img, 'JPEG', 20, 20);  
                doc.save('Brajalal-html-to-pdf.pdf');  
                form.width(cache_width);  
            });  
        }  
  
        // create canvas object  
        function getCanvas() {  
            form.width((a4[0] * 1.33333) - 80).css('max-width', 'none');  
            return html2canvas(form, {  
                imageTimeout: 2000,  
                removeContainer: true  
            });  
        }  
  
    }());  
</script>  
<script>  
    /* 
 * jQuery helper plugin for examples and tests 
 */  
    (function ($) {  
        $.fn.html2canvas = function (options) {  
            var date = new Date(),  
                $message = null,  
                timeoutTimer = false,  
                timer = date.getTime();  
            html2canvas.logging = options && options.logging;  
            html2canvas.Preload(this[0], $.extend({  
                complete: function (images) {  
                    var queue = html2canvas.Parse(this[0], images, options),  
                        $canvas = $(html2canvas.Renderer(queue, options)),  
                        finishTime = new Date();  
  
                    $canvas.css({ position: 'absolute', left: 0, top: 0 }).appendTo(document.body);  
                    $canvas.siblings().toggle();  
  
                    $(window).click(function () {  
                        if (!$canvas.is(':visible')) {  
                            $canvas.toggle().siblings().toggle();  
                            throwMessage("Canvas Render visible");  
                        } else {  
                            $canvas.siblings().toggle();  
                            $canvas.toggle();  
                            throwMessage("Canvas Render hidden");  
                        }  
                    });  
                    throwMessage('Screenshot created in ' + ((finishTime.getTime() - timer) / 1000) + " seconds<br />", 4000);  
                }  
            }, options));  
  
            function throwMessage(msg, duration) {  
                window.clearTimeout(timeoutTimer);  
                timeoutTimer = window.setTimeout(function () {  
                    $message.fadeOut(function () {  
                        $message.remove();  
                    });  
                }, duration || 2000);  
                if ($message)  
                    $message.remove();  
                $message = $('<div ></div>').html(msg).css({  
                    margin: 0,  
                    padding: 10,  
                    background: "#000",  
                    opacity: 0.7,  
                    position: "fixed",  
                    top: 10,  
                    right: 10,  
                    fontFamily: 'Tahoma',  
                    color: '#fff',  
                    fontSize: 12,  
                    borderRadius: 12,  
                    width: 'auto',  
                    height: 'auto',  
                    textAlign: 'center',  
                    textDecoration: 'none'  
                }).hide().fadeIn().appendTo('body');  
            }  
        };  
    })(jQuery);  
  
</script>